// Copyright Â© SixtyFPS GmbH <info@slint.dev>
// SPDX-License-Identifier: MIT

import { HorizontalBox, VerticalBox, StandardTableView, GroupBox, GridBox, Spinner,CheckBox,ProgressIndicator} from "std-widgets.slint";
import { TestSettings } from "../test_settings.slint";
import { Page } from "page.slint";

export global FunctionsPageAdapter  {
    in property <[[StandardListViewItem]]> row_data: [
        [ { text: "Item 1.1" }, { text: "Item 1.2" }, { text: "Item 1.3" }, { text: "Item 1.4" }, ],
        [ { text: "Item 2.1" }, { text: "Item 2.2" }, { text: "Item 2.3" }, { text: "Item 2.4" }, ],
        [ { text: "Item 3.1" }, { text: "Item 3.2" }, { text: "Item 3.3" }, { text: "Item 3.4" }, ],
        [ { text: "Item 4.1" }, { text: "Item 4.2" }, { text: "Item 4.3" }, { text: "Item 4.4" }, ],
        [ { text: "Item 5.1" }, { text: "Item 5.2" }, { text: "Item 5.3" }, { text: "Item 5.4" }, ],
        [ { text: "Item 6.1" }, { text: "Item 6.2" }, { text: "Item 6.3" }, { text: "Item 6.4" }, ],
    ];
    in property <[string]> function_title: ["ALS","I2C","ALM","TIM","ACT","TMP","SER","TTI"];

    callback sort_ascending(int);
    callback sort_descending(int);
    callback function_test_start(string);
}


export component FunctionsPage inherits Page {
    title: @tr("Functions");
    show-enable-switch: false;
    description: @tr("StandardTableView can be used to display a list of text elements in columns and rows. It can be imported from \"std-widgets.slint\"");
    in property <int> index : 0;
    VerticalBox {
        alignment: start;

        HorizontalBox {
            vertical-stretch: 1;
            alignment: space-between;
            GroupBox {
                title: @tr("Fuctions");
                vertical-stretch: 0;
            }
            GroupBox {
                title: @tr("Progress");
                vertical-stretch: 0;
            }
            GroupBox {
                title: @tr("Result");
                vertical-stretch: 0;
            }
        }

        //title: @tr("");
        //vertical-stretch: 0;
        //for func in FunctionsPageAdapter.function_title :GridBox{

 
        for func in FunctionsPageAdapter.function_title: GroupBox {
            CheckBox {
                preferred-height: 8px;
                text: func;
                checked :false;
                toggled => {
                    if(self.checked)
                    {
                        FunctionsPageAdapter.function_test_start(func);
                    }else{
                        //FunctionsPageAdapter.function_test_stop(func);
                    }
                }
            }
                Rectangle {
                cir_progress := Spinner {
                    progress: 0;
                    indeterminate: true;
                }
            }
        Rectangle {}
        }
        
        
    }
}
