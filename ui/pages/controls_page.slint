// Copyright © SixtyFPS GmbH <info@slint.dev>
// SPDX-License-Identifier: MIT

import { VerticalBox, GroupBox, TextEdit ,LineEdit,HorizontalBox,ComboBox,StandardButton,Button} from "std-widgets.slint";
import { TestSettings } from "../test_settings.slint";
import { Page } from "page.slint";

struct device_info {
    checked: bool,
    description: string
}

struct flash_info {
    board_type: string,
    version_list: [string],
    version_selected:string,
    devices: [device_info],
}


export global ControlsPageAdapter {
    in-out property <flash_info> flash : {
        board_type :"dc11p626",
        version_list:[ "Select version",],
        version_selected:"",
        devices:[],
    };
    
    callback flash_apply(flash_info);
    callback flash_start();
    pure public function get_connect()-> flash_info {
        self.flash
      }
}

export component ControlsPage inherits Page {
    title: @tr("Controls");
    description: @tr("None");

    VerticalBox {//纵向容器
        alignment: start;


        HorizontalBox { //横向容器
            GroupBox {
                title: @tr("board type");

                board-type := ComboBox {
                    model: [@tr("Select board"), @tr("dc11p626")];
                    enabled: TestSettings.widgets-enabled;
                    current-value: ControlsPageAdapter.flash.board-type;
                    selected => {
                        ControlsPageAdapter.flash.board-type = self.current-value;
                        save.enabled = true;
                    }
                }
            }
            
            GroupBox {
                title: @tr("version");

                version := ComboBox {
                    model: ControlsPageAdapter.flash.version_list;
                    enabled: TestSettings.widgets-enabled;
                    current-value: ControlsPageAdapter.flash.version_selected;
                    selected => {
                        ControlsPageAdapter.flash.version_selected = self.current-value;
                        save.enabled = true;
                    }
                }
            }
        }

        HorizontalBox { //横向容器
            vertical-stretch: 1;
            alignment: space-between;

            save := StandardButton{
                kind:apply;
                //enabled: TestSettings.widgets-enabled;
                clicked() => {
                    ControlsPageAdapter.flash.board-type = board-type.current-value;
                    ControlsPageAdapter.flash.version-selected = version.current-value;
                    ControlsPageAdapter.flash_apply(ControlsPageAdapter.flash);
                    self.enabled = false;
                }
            }

            start_button := Button {
                checkable: true;
                enabled: flash_info.devices.length > 0;
                text: !self.checked ? @tr("Start") : @tr("Stop");
                //enabled: TestSettings.widgets-enabled;
                clicked => {
                    if (self.checked)
                    {
                        ControlsPageAdapter.flash_start();
                    }
                }
            }
        }

        Column {
            Repeater {
                for device in ControlsPageAdapter.flash.devices: {
                    Row {
                        CheckBox {
                            checked: device.checked;
                            clicked => {
                                device.checked = self.checked;
                            }
                        }
                        Text {
                            text: device.description;
                        }
                    }
                }
            }
            Text {
                text: "No devices connected";
                color: red;
                visible: flash_info.devices.length == 0;
            }
        }

    }
}

